"""initial migration

Revision ID: 0b36c83606e1
Revises: bef378350ed5
Create Date: 2024-05-15 14:13:15.435445

"""
from typing import Sequence

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '0b36c83606e1'
down_revision: str | None = 'bef378350ed5'
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('goals', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('goals_user_id_fkey', 'goals', type_='foreignkey')
    op.create_foreign_key(None, 'goals', 'users', ['user_id'], ['user_id'])
    op.alter_column('progress', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('progress', 'workout_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('progress', 'date_completed',
               existing_type=sa.DATE(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=False)
    op.drop_constraint('progress_workout_id_fkey', 'progress', type_='foreignkey')
    op.drop_constraint('progress_user_id_fkey', 'progress', type_='foreignkey')
    op.create_foreign_key(None, 'progress', 'users', ['user_id'], ['user_id'])
    op.create_foreign_key(None, 'progress', 'workouts', ['workout_id'], ['workout_id'])
    op.alter_column('workouts', 'group_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workouts', 'equipment_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workouts', 'reps',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workouts', 'sets',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('workouts', 'weights',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workouts', 'weights',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('workouts', 'sets',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('workouts', 'reps',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('workouts', 'equipment_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('workouts', 'group_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'progress', type_='foreignkey')
    op.drop_constraint(None, 'progress', type_='foreignkey')
    op.create_foreign_key('progress_user_id_fkey', 'progress', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.create_foreign_key('progress_workout_id_fkey', 'progress', 'workouts', ['workout_id'], ['workout_id'], ondelete='CASCADE')
    op.alter_column('progress', 'date_completed',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('progress', 'workout_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('progress', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_constraint(None, 'goals', type_='foreignkey')
    op.create_foreign_key('goals_user_id_fkey', 'goals', 'users', ['user_id'], ['user_id'], ondelete='CASCADE')
    op.alter_column('goals', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    # ### end Alembic commands ###
